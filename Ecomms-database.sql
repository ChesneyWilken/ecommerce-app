-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS ecoms.cart
(
    cart_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    customer_id integer,
    product_id integer,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    status character varying(255) COLLATE pg_catalog."default" DEFAULT 'active'::character varying,
    CONSTRAINT cart_pkey PRIMARY KEY (cart_id)
);

CREATE TABLE IF NOT EXISTS ecoms.cart_items
(
    cart_item_id serial NOT NULL,
    cart_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    price numeric(10, 2) NOT NULL,
    added_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT cart_items_pkey PRIMARY KEY (cart_item_id)
);

CREATE TABLE IF NOT EXISTS ecoms.category
(
    category_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default",
    CONSTRAINT category_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS ecoms.customer
(
    customer_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    email text COLLATE pg_catalog."default",
    password text COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    phone_number text COLLATE pg_catalog."default",
    CONSTRAINT customer_pkey PRIMARY KEY (customer_id),
    CONSTRAINT customer_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS ecoms."order"
(
    order_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    order_date date,
    total_price numeric,
    customer_id integer,
    payment_id integer,
    CONSTRAINT order_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS ecoms.order_item
(
    order_item_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_id integer,
    quantity integer,
    price numeric,
    order_id integer,
    CONSTRAINT order_item_pkey PRIMARY KEY (order_item_id)
);

CREATE TABLE IF NOT EXISTS ecoms.payment
(
    payment_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    payment_date date,
    payment_method text COLLATE pg_catalog."default",
    amount numeric,
    customer_id integer,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT 'pending'::character varying,
    CONSTRAINT payment_pkey PRIMARY KEY (payment_id)
);

CREATE TABLE IF NOT EXISTS ecoms.product
(
    product_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_name text COLLATE pg_catalog."default",
    sku text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    inventory_level integer,
    cost_price numeric,
    retail_price numeric,
    category_id integer,
    CONSTRAINT product_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS ecoms.shipment
(
    shipment_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    shipment_date date,
    address text COLLATE pg_catalog."default",
    city text COLLATE pg_catalog."default",
    county text COLLATE pg_catalog."default",
    country text COLLATE pg_catalog."default",
    postal_code text COLLATE pg_catalog."default",
    customer_id integer,
    order_id integer,
    CONSTRAINT shipment_pkey PRIMARY KEY (shipment_id)
);

CREATE TABLE IF NOT EXISTS ecoms.user_sessions
(
    sid character varying COLLATE pg_catalog."default" NOT NULL,
    sess json NOT NULL,
    expire timestamp(6) without time zone NOT NULL,
    CONSTRAINT session_pkey PRIMARY KEY (sid)
);

ALTER TABLE IF EXISTS ecoms.cart
    ADD CONSTRAINT cart_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES ecoms.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.cart
    ADD CONSTRAINT cart_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES ecoms.product (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.cart_items
    ADD CONSTRAINT cart_items_cart_id_fkey FOREIGN KEY (cart_id)
    REFERENCES ecoms.cart (cart_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.cart_items
    ADD CONSTRAINT cart_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES ecoms.product (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms."order"
    ADD CONSTRAINT order_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES ecoms.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms."order"
    ADD CONSTRAINT order_payment_id_fkey FOREIGN KEY (payment_id)
    REFERENCES ecoms.payment (payment_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.order_item
    ADD CONSTRAINT order_item_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES ecoms."order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.order_item
    ADD CONSTRAINT order_item_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES ecoms.product (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.payment
    ADD CONSTRAINT payment_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES ecoms.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.product
    ADD CONSTRAINT product_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES ecoms.category (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.shipment
    ADD CONSTRAINT fk_shipment_order FOREIGN KEY (order_id)
    REFERENCES ecoms."order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.shipment
    ADD CONSTRAINT shipment_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES ecoms.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecoms.shipment
    ADD CONSTRAINT shipment_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES ecoms."order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;